<% Rails.application.config.relationship_types.each do |relationship| %>
  <% @fm = @visit.family_members.where(relationship: relationship)[0] %>

  <% if @fm.nil? %>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" data-family-member=<%= relationship %> >Open 'new' modal for <%= relationship %></button>
  <% else %>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" data-family-member=<%= "#{relationship}" %> >Open 'edit' modal for <%= relationship %></button>
  <% end %>

  <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
          <h4 class="modal-title" id="myModalLabel"></h4>
        </div>
        <div class="modal-body">
          <span class="note"></span>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>
<% end %>

<script>
$('#exampleModal').on('show.bs.modal', function (event) {
  var button = $(event.relatedTarget) // Button that triggered the modal
  var familyMember = button.data('family-member') // Extract info from data-* attributes
  // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
  // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
  var modal = $(this)
  modal.find('.modal-title').text('New message to ' + familyMember)
  modal.find('.modal-body span.note').html(<%= j render 'relationships/family_member', f: f %>)
})
</script>
